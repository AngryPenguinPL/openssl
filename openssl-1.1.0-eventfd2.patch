--- openssl-1.1.0/engines/afalg/e_afalg.c.omv~	2016-09-15 22:34:50.377392074 +0200
+++ openssl-1.1.0/engines/afalg/e_afalg.c	2016-09-15 22:38:10.558254741 +0200
@@ -18,6 +18,7 @@
 #include <openssl/err.h>
 
 #include <linux/version.h>
+#include <sys/eventfd.h>
 #define K_MAJ   4
 #define K_MIN1  1
 #define K_MIN2  0
@@ -99,11 +100,6 @@ static ossl_inline int io_setup(unsigned
     return syscall(__NR_io_setup, n, ctx);
 }
 
-static ossl_inline int eventfd(int n)
-{
-    return syscall(__NR_eventfd, n);
-}
-
 static ossl_inline int io_destroy(aio_context_t ctx)
 {
     return syscall(__NR_io_destroy, ctx);
@@ -149,7 +145,7 @@ static int afalg_setup_async_event_notif
              * waitfd is not set in ASYNC_WAIT_CTX, create a new one
              * and set it. efd will be signaled when AIO operation completes
              */
-            aio->efd = eventfd(0);
+            aio->efd = eventfd(0, 0);
             if (aio->efd == -1) {
                 ALG_PERR("%s: Failed to get eventfd : ", __func__);
                 AFALGerr(AFALG_F_AFALG_SETUP_ASYNC_EVENT_NOTIFICATION,
@@ -173,7 +169,7 @@ static int afalg_setup_async_event_notif
         aio->mode = MODE_ASYNC;
     } else {
         /* Sync mode */
-        aio->efd = eventfd(0);
+        aio->efd = eventfd(0, 0);
         if (aio->efd == -1) {
             ALG_PERR("%s: Failed to get eventfd : ", __func__);
             AFALGerr(AFALG_F_AFALG_SETUP_ASYNC_EVENT_NOTIFICATION,
